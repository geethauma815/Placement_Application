{"ast":null,"code":"var _jsxFileName = \"/home/rgukt-basar/Downloads/placement-prep-starter/client/src/components/PostJob.js\",\n  _s = $RefreshSig$();\n/*import { useState } from \"react\";\nimport axios from \"axios\";\n\nfunction PostJob() {\n  const [form, setForm] = useState({\n    _id: \"\",\n    profile: \"\",\n    desc: \"\",\n    exp: \"\",\n    techs: \"\",\n  });\n\n  const handleChange = (e) => {\n    setForm({ ...form, [e.target.name]: e.target.value });\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    const payload = {\n      ...form,\n      exp: parseInt(form.exp),\n      techs: form.techs.split(',').map(tech => tech.trim())\n    };\n\n    try {\n      const res = await axios.post(\"http://localhost:5000/api/jobs\", payload);\n      alert(res.data.message);\n    } catch (err) {\n      alert(\"Error: \" + err.response.data.error);\n    }\n  };\n\n  return (\n    <div>\n      <h2>Post a New Job</h2>\n      <form onSubmit={handleSubmit}>\n        <input name=\"_id\" placeholder=\"Job ID\" onChange={handleChange} required /><br />\n        <input name=\"profile\" placeholder=\"Profile\" onChange={handleChange} required /><br />\n        <textarea name=\"desc\" placeholder=\"Description\" onChange={handleChange} required /><br />\n        <input name=\"exp\" type=\"number\" placeholder=\"Experience (years)\" onChange={handleChange} required /><br />\n        <input name=\"techs\" placeholder=\"Techs (comma separated)\" onChange={handleChange} required /><br />\n        <button type=\"submit\">Post Job</button>\n      </form>\n    </div>\n  );\n}\n\nexport default PostJob;*/\n\nimport { useState } from \"react\";\nimport { ethers } from \"ethers\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PostJob() {\n  _s();\n  const [form, setForm] = useState({\n    _id: \"\",\n    profile: \"\",\n    desc: \"\",\n    exp: \"\",\n    techs: \"\"\n  });\n  const [walletAddress, setWalletAddress] = useState(\"\");\n  const [paid, setPaid] = useState(false);\n  const platformFee = \"0.001\"; // in ETH or MATIC\n\n  const handleChange = e => {\n    setForm({\n      ...form,\n      [e.target.name]: e.target.value\n    });\n  };\n  const connectWallet = async () => {\n    if (!window.ethereum) return alert(\"MetaMask not detected\");\n    try {\n      const provider = new ethers.BrowserProvider(window.ethereum);\n      const accounts = await window.ethereum.request({\n        method: \"eth_requestAccounts\"\n      });\n      setWalletAddress(accounts[0]);\n    } catch (err) {\n      alert(\"Wallet connection failed\");\n    }\n  };\n  const payPlatformFee = async () => {\n    try {\n      const provider = new ethers.BrowserProvider(window.ethereum);\n      const signer = await provider.getSigner();\n      const tx = await signer.sendTransaction({\n        to: \"0xf2f8466780f45536bc254d0882a4f6608b631b88\",\n        // ðŸ§  Replace with admin wallet\n        value: ethers.parseEther(platformFee)\n      });\n      await tx.wait();\n      alert(\"Payment Successful\");\n      setPaid(true);\n    } catch (err) {\n      alert(\"Payment failed: \" + err.message);\n    }\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!paid) return alert(\"Please pay the platform fee first\");\n    const payload = {\n      ...form,\n      exp: parseInt(form.exp),\n      techs: form.techs.split(\",\").map(t => t.trim())\n    };\n    try {\n      const res = await axios.post(\"http://localhost:5000/api/jobs\", payload);\n      alert(res.data.message);\n    } catch (err) {\n      alert(\"Error: \" + err.response.data.error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Post a New Job\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this), !walletAddress && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: connectWallet,\n      children: \"Connect Wallet\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 26\n    }, this), walletAddress && !paid && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: payPlatformFee,\n      children: [\"Pay \", platformFee, \" ETH\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 34\n    }, this), paid && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: \"green\"\n      },\n      children: \"\\u2714 Payment Complete\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 16\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"_id\",\n        placeholder: \"Job ID\",\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 83\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"profile\",\n        placeholder: \"Profile\",\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 88\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        name: \"desc\",\n        placeholder: \"Description\",\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 92\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"exp\",\n        type: \"number\",\n        placeholder: \"Experience (years)\",\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 109\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"techs\",\n        placeholder: \"Techs (comma separated)\",\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 102\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: !paid,\n        children: \"Post Job\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 118,\n    columnNumber: 5\n  }, this);\n}\n_s(PostJob, \"5iLzvMsjX6eb1rPQDvqMwuVs8i4=\");\n_c = PostJob;\nexport default PostJob;\nvar _c;\n$RefreshReg$(_c, \"PostJob\");","map":{"version":3,"names":["useState","ethers","axios","jsxDEV","_jsxDEV","PostJob","_s","form","setForm","_id","profile","desc","exp","techs","walletAddress","setWalletAddress","paid","setPaid","platformFee","handleChange","e","target","name","value","connectWallet","window","ethereum","alert","provider","BrowserProvider","accounts","request","method","err","payPlatformFee","signer","getSigner","tx","sendTransaction","to","parseEther","wait","message","handleSubmit","preventDefault","payload","parseInt","split","map","t","trim","res","post","data","response","error","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","style","color","onSubmit","placeholder","onChange","required","type","disabled","_c","$RefreshReg$"],"sources":["/home/rgukt-basar/Downloads/placement-prep-starter/client/src/components/PostJob.js"],"sourcesContent":["/*import { useState } from \"react\";\nimport axios from \"axios\";\n\nfunction PostJob() {\n  const [form, setForm] = useState({\n    _id: \"\",\n    profile: \"\",\n    desc: \"\",\n    exp: \"\",\n    techs: \"\",\n  });\n\n  const handleChange = (e) => {\n    setForm({ ...form, [e.target.name]: e.target.value });\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    const payload = {\n      ...form,\n      exp: parseInt(form.exp),\n      techs: form.techs.split(',').map(tech => tech.trim())\n    };\n\n    try {\n      const res = await axios.post(\"http://localhost:5000/api/jobs\", payload);\n      alert(res.data.message);\n    } catch (err) {\n      alert(\"Error: \" + err.response.data.error);\n    }\n  };\n\n  return (\n    <div>\n      <h2>Post a New Job</h2>\n      <form onSubmit={handleSubmit}>\n        <input name=\"_id\" placeholder=\"Job ID\" onChange={handleChange} required /><br />\n        <input name=\"profile\" placeholder=\"Profile\" onChange={handleChange} required /><br />\n        <textarea name=\"desc\" placeholder=\"Description\" onChange={handleChange} required /><br />\n        <input name=\"exp\" type=\"number\" placeholder=\"Experience (years)\" onChange={handleChange} required /><br />\n        <input name=\"techs\" placeholder=\"Techs (comma separated)\" onChange={handleChange} required /><br />\n        <button type=\"submit\">Post Job</button>\n      </form>\n    </div>\n  );\n}\n\nexport default PostJob;*/\n\nimport { useState } from \"react\";\nimport { ethers } from \"ethers\";\nimport axios from \"axios\";\n\nfunction PostJob() {\n  const [form, setForm] = useState({\n    _id: \"\",\n    profile: \"\",\n    desc: \"\",\n    exp: \"\",\n    techs: \"\",\n  });\n  const [walletAddress, setWalletAddress] = useState(\"\");\n  const [paid, setPaid] = useState(false);\n  const platformFee = \"0.001\"; // in ETH or MATIC\n\n  const handleChange = (e) => {\n    setForm({ ...form, [e.target.name]: e.target.value });\n  };\n\n  const connectWallet = async () => {\n    if (!window.ethereum) return alert(\"MetaMask not detected\");\n\n    try {\n      const provider = new ethers.BrowserProvider(window.ethereum);\n      const accounts = await window.ethereum.request({ method: \"eth_requestAccounts\" });\n      setWalletAddress(accounts[0]);\n    } catch (err) {\n      alert(\"Wallet connection failed\");\n    }\n  };\n\n  const payPlatformFee = async () => {\n    try {\n      const provider = new ethers.BrowserProvider(window.ethereum);\n      const signer = await provider.getSigner();\n      const tx = await signer.sendTransaction({\n        to: \"0xf2f8466780f45536bc254d0882a4f6608b631b88\", // ðŸ§  Replace with admin wallet\n        value: ethers.parseEther(platformFee),\n      });\n      await tx.wait();\n      alert(\"Payment Successful\");\n      setPaid(true);\n    } catch (err) {\n      alert(\"Payment failed: \" + err.message);\n    }\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    if (!paid) return alert(\"Please pay the platform fee first\");\n\n    const payload = {\n      ...form,\n      exp: parseInt(form.exp),\n      techs: form.techs.split(\",\").map((t) => t.trim()),\n    };\n\n    try {\n      const res = await axios.post(\"http://localhost:5000/api/jobs\", payload);\n      alert(res.data.message);\n    } catch (err) {\n      alert(\"Error: \" + err.response.data.error);\n    }\n  };\n\n  return (\n    <div>\n      <h2>Post a New Job</h2>\n\n      {!walletAddress && <button onClick={connectWallet}>Connect Wallet</button>}\n      {walletAddress && !paid && <button onClick={payPlatformFee}>Pay {platformFee} ETH</button>}\n      {paid && <p style={{ color: \"green\" }}>âœ” Payment Complete</p>}\n\n      <form onSubmit={handleSubmit}>\n        <input name=\"_id\" placeholder=\"Job ID\" onChange={handleChange} required /><br />\n        <input name=\"profile\" placeholder=\"Profile\" onChange={handleChange} required /><br />\n        <textarea name=\"desc\" placeholder=\"Description\" onChange={handleChange} required /><br />\n        <input name=\"exp\" type=\"number\" placeholder=\"Experience (years)\" onChange={handleChange} required /><br />\n        <input name=\"techs\" placeholder=\"Techs (comma separated)\" onChange={handleChange} required /><br />\n        <button type=\"submit\" disabled={!paid}>Post Job</button>\n      </form>\n    </div>\n  );\n}\n\nexport default PostJob;\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}